#!/bin/bash
set -e -x
# By Grant Perkins, 2020


cd /opt/ml/input/data/training
classes=$(python3 /tensorflow/models/research/labels.py)
cd /tensorflow/models/research

sed -i "s%NUM_CLASSES%${classes}%g" "./pipeline.config"

# Get number of epochs from SageMaker
TRAIN_STEPS=$(python3 hyper.py)
TRAIN_STEPS=1000

BATCH_SIZE=$(python3 batch.py)

sed -i "s%BATCH_SIZE_PARAM%${BATCH_SIZE}%g" "./pipeline.config"

printf ".\nHyperparameters parsed"

# Copy custom pipeline
cp pipeline.config /tensorflow/models/research/learn/ckpt/pipeline.config


printf ".\nBeginning training on Docker image"
./retrain_detection_model.sh --num_training_steps $TRAIN_STEPS --num_eval_steps 100 #> output.txt 2> output.txt

python3 accuracy.py > accuracy.txt
cat accuracy.txt
cp accuracy.txt /opt/ml/model/accuracy.txt

printf ".\nConverting checkpoint to tflite"
./convert_checkpoint_to_edgetpu_tflite.sh --checkpoint_num $TRAIN_STEPS > /dev/null 2>&1
cp ./learn/models/output_tflite_graph.tflite /opt/ml/model/unoptimized.tflite


printf ".\nCompiling model for Edge TPU"
edgetpu_compiler ./learn/models/output_tflite_graph.tflite -o /opt/ml/model/ # > /dev/null 2>&1

cp /opt/ml/input/data/training/map.pbtxt /opt/ml/model/map.pbtxt

rm /opt/ml/model/output_tflite_graph_edgetpu.log

mv /opt/ml/model/output_tflite_graph_edgetpu.tflite /opt/ml/model/model.tflite

tar -czf model.tar.gz /opt/ml/model/model.tflite /opt/ml/model/map.pbtxt /opt/ml/model/unoptimized.tflite
